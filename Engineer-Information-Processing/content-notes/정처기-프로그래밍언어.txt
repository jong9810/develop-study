<프로그래밍 언어>
(1) C언어
* switch case문에서 case 부분에 break가 없으면 아래에 있는 case도 출력한다.
* C언어의 문자열은 char[]로 선언한다.
* char[]의 마지막은 항상 null이 삽입되므로 선언하려고 하는 문자열보다 크기가 1 이상 커야 한다.
* 문자열(%s)을 출력할 때 null을 만나기 전까지 출력한다.
* (문자열 변수 + 1)을 출력하면 1번 인덱스부터 null 전까지 출력한다.
* n차원 배열 선언시 1차원 배열로 초기화하면 앞에서부터 자동으로 끊어서 n차원 배열로 선언된다(값이 모자르면 default 값으로 초기화).
* C언어의 구조체는 메서드가 없는 JAVA의 클래스와 비슷하다.
* C언어의 함수는 Call by Value(값 전달), Call by Reference(주소 전달)의 두 가지 매개변수 전달 방법이 있다.
* 문자열 함수 
1) strcat(dest, src) ==> dest 문자열 뒤에 src 문자열을 이어붙인다(dest 문자열 변수의 길이가 src + dest + 1 이상이어야 함).
2) strncat(dest, src, maxlen) ==> dest 문자열 뒤에 src 문자열의 맨 앞에서부터 maxlen의 길이만큼을 이어붙인다.
3) strcpy(dest, src) ==> dest 문자열에 src 문자열을 복사한다.
4) strncpy(dest, src, maxlen) ==> dest 문자열에 src 문자열의 맨 앞에서부터 maxlen의 길이만큼을 복사한다.
5) strcmp(s1, s2) ==> s1 문자열과 s2 문자열의 대소를 비교한다(ASCII 코드).
6) strncmp(s1, s2) ==> maxlen 길이만큼만 s1, s2의 대소를 비교한다.
7) strlen(s) ==> s 문자열의 길이를 반환한다.
8) strrev(s) ==> s 문자열을 거꾸로 뒤집는다.
* 포인터
1) 자료형 뒤에 *를 붙이면 주소를 저장하는 포인터 변수라는 의미이다.
2) 일반 변수명에 &를 붙이면 해당 변수명의 주소값이다.
3) 주소값에 해당하는 값을 가리킬 때는 *를 붙인다.
4) a라는 배열이 있고, a배열의 주소값을 가리키는 p 포인터 변수가 있을 때, a[1], *(a + 1), *(p + 1), p[1]은 모두 같은 값을 가리킨다.

(2) JAVA
* 자식 클래스를 생성하면 부모 클래스 생성자를 먼저 방문하고, 그 다음에 자식 클래스 생성자를 방문한다.
* 부모 클래스의 메서드를 자식 클래스에서 오버라이딩 한 경우 자식 클래스의 인스턴스로 해당 메서드를 호출하면 오버라이딩한 함수를 실행한다.

(3) PYTHON
* 자식 클래스를 생성하면 자식 클래스의 생성자만 방문한다.

